#!/bin/sh

rm -f /tmp/circle_enabled.flag
rm -f /tmp/circle_running.flag

orbi=0
R8000P=0
if [ "$1" = "orbi" ]; then
	orbi=1
elif [ "$1" = "R8000P" ]; then
	R8000P=1
fi

if [ -s /tmp/CIRCLE_ROOT ]; then
	export CIRCLE_ROOT=`cat /tmp/CIRCLE_ROOT`
elif [ $orbi = 1 ]; then
	export CIRCLE_ROOT=/mnt/circle/shares/usr/bin
elif [ $R8000P = 1 ]; then
	export CIRCLE_ROOT=/data/circle/shares/usr/bin
else
	export CIRCLE_ROOT=/mnt/shares/usr/bin
fi
echo $CIRCLE_ROOT > /tmp/CIRCLE_ROOT
DIR=$CIRCLE_ROOT
export PATH=$PATH:$DIR
export LD_LIBRARY_PATH=$DIR

rm -rf /var/service;
killall -SIGHUP runsvdir
killall mdnsd
sleep 1
killall -9 timetracker 
iptables -F PAUSE
iptables -F FILTERED
iptables -F UNMANAGED
ip=`ifconfig br0 | awk '/inet addr:/{print substr($2,6);}'`
var=0
pid=`ps | grep "shares/usr/bin/tinycron" | grep -v "grep" | awk '{print $1;}'`

#var used as fail-safe
while [ ! -z "$pid" ] && [ "$var" -lt 100 ]; do
	var=$((var+1))
	kill -9 $pid
	echo "killed $pid"
	pid=`ps | grep "shares/usr/bin/tinycron" | grep -v "grep" | awk '{print $1;}'`
done
# remove iptable items for forwarding dns requests
if [ $orbi = 1 ]; then
	for line_num in $(iptables --line-numbers --list PREROUTING -t nat | awk '$9=="to:'$ip':53" {print $1}')
	do
		LINES="$line_num $LINES"
	done
	for line in $LINES
	do
		iptables -t nat -D PREROUTING $line
	done
	unset LINES
fi

ifconfig br0:0 0.0.0.0

#start the router's dnsmasq
killall dnsmasq
sleep 1
if [ $orbi = 1 ]; then
	/etc/init.d/dnsmasq start
elif [ $R8000P = 1 ]; then
	dnsmasq -h -n -c 0 -N -i br0 -r /tmp/resolv.conf -I lo -u root
else
	dnsmasq -h -n -c 0 -N -i br0 -r /tmp/resolv.conf -u root
fi
echo "circle stopped."
